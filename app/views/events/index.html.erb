<img src="https://s3.eu-central-1.amazonaws.com/walloniatimemachine/logo+WTM/logo.png" style="top:10px; right:10px; position:fixed; z-index:2; width:auto; height:20%;"/>
<div id="container" >
  <div id="map" class="map"></div>
  <div id="slider-container">
      <div class="era list-inline"></div>
    <input id="slider" type="range" min=<%= Event::FIRST_YEAR %> max=<%= Event::LAST_YEAR %> step="10" />
    <div id ="selected-year"></div>
  </div>
</div>

<div id="add_place">

  </div>
</div>


</div>


<% content_for(:after_js) do %>
  <%= javascript_tag do %>

var year = d3.scale.linear()
    .domain([<%= Event::FIRST_YEAR %>, <%= Event::LAST_YEAR %>])
    .range([0, 100]);


var periodPercent = d3.scale.linear()
    .domain([0 , <%= - Event::FIRST_YEAR + Event::LAST_YEAR %>])
    .range([0, 100]);

var arrayOfLatLngs = [];

  <% @events.each do |event| %>
  arrayOfLatLngs.push([<%= event.latitude %>, <%= event.longitude %>]);
  d3.select('#slider-container').insert("i", ":first-child").attr("id","arrow<%= event.id %>").attr("class", "arrow fa fa-caret-down").style('left', year(<%= event.start_year %>)+ '%' );

    <% end %>

    d3.select('.era').append('li').attr('class', 'period <%= Event::PERIODS[0][0][0] %>').attr('class', 'A').style('width', periodPercent(476)+'%').html('<%= Event::PERIODS[0][0] %>');
    d3.select('.era').append('li').attr('class', 'period <%= Event::PERIODS[1][0][0] %>').attr('class', 'M').style('width', periodPercent(1016)+'%').html('<%= Event::PERIODS[1][0] %>');;
    d3.select('.era').append('li').attr('class', 'period <%= Event::PERIODS[2][0][0] %>').attr('class', 'T').style('width', periodPercent(297)+'%').html('<%= Event::PERIODS[2][0] %>');;
    d3.select('.era').append('li').attr('class', 'period <%= Event::PERIODS[3][0][0] %>').attr('class', 'E').style('width', periodPercent(226)+'%').html('<%= Event::PERIODS[3][0] %>');;

var bounds = new L.LatLngBounds(arrayOfLatLngs);



  var tileServer = 'http://{s}.tile.openstreetmap.se/hydda/full/{z}/{x}/{y}.png'

  var tileAttribution = 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>';

  var map = L.map("map",{bounceAtZoomLimits:false, worldCopyJump:true, zoom: 5,maxZoom:18, zoomAnimationThreshold:7, touchZoom:true}).fitBounds(bounds);

  L.tileLayer(tileServer, {attribution: tileAttribution, noWrap:true}).addTo(map);

  var markers = {};
  // var markers = L.markerClusterGroup({showCoverageOnHover:false});

  var markerMap = {};
  var popUpMap = {};
  var myIcon = L.divIcon({
    iconSize: new L.Point(45, 45),
});

  <% @events.each do |event| %>

    var marker = L.marker([<%= event.latitude %>, <%= event.longitude %>], {icon:myIcon});

      marker.id = <%= event.id %>;
      marker.start_year = <%= event.start_year %>;
      marker.period = getperiod(marker.start_year);
      markerMap[<%= event.id %>] = marker;
      popUpMap[<%= event.id %>] = markerMap[<%= event.id %>].bindPopup('<%= event.title %> <p><%= link_to("See more", event_path(event.id), { onclick: "$.fancybox( {href : '" + event_path(event.id) + "?ajax=yes', type: 'ajax'} );return false;" })  %></p>');
      <% if event.icon_type %>
      marker.icon_type = '<%= event.icon_type %>'
      <% end %>
      marker.options.icon.options.className = "icon-round";
      marker.options.icon.options.html = '<div class="icon-circle ' + marker.period[0] + '">' + getIcon('<%= event.icon_type %>') + '</div><div class="tip fa fa-caret-down"></div>';
      // markers.addLayer(marker);
    	<% if @highlight == event.id %>
    	   marker.openPopup();
    	<% end %>
    map.addLayer(marker);
  <% end %>

   document.getElementById('slider').addEventListener('change', function() {

        var selected = this.value;
        d3.select('#selected-year').html(selected);
        console.log("selected ", selected);
      _.each(markerMap, function(marker){

      // range in which the marker pops-up
      var range = 30;

	map.removeLayer(marker);

	if (getperiod(selected) == marker.period){
    marker.options.icon.options.html = '<div class="icon-circle ' + marker.period[0] + '">' + getIcon(marker.icon_type) + '</div><div class="tip fa fa-caret-down"></div>';
    // markers.addLayer(marker);
    // console.log(marker)
    // console.log('markers' + markers);
    // markers.addTo(map);
    marker.addTo(map);
          d3.selectAll('.' + marker.period[0]).transition().style('opacity', '1');
        }else{
          d3.selectAll('.' + marker.period[0]).transition().style('opacity', '0.5');
        }

      if (selected - range < marker.start_year && parseInt(selected) + range > marker.start_year){
          console.log(marker);
        marker.openPopup();
        d3.select('#arrow' + marker.id).style('font-size','1.6em').style('color', 'white');
      }else{
        marker.closePopup();
        d3.select('#arrow' + marker.id).style('font-size','1em').style('color', 'lightgrey');
      }

      });

   <% if @highlight %>
      if( markerMap[<%= @highlight %>] !== undefined ) {
        document.getElementById('slider').value = markers[<%= @highlight %>].start_year;
      }
   <% end %>

});

function getIcon(icon_type){
  switch (icon_type) {
    case  "tree":
        return "<i class='fa fa-tree'></i>";
        break;
    case "monument":
        return "<i class='fa fa-university'></i>";
        break;
    case "plane crash":
        return "<i class='fa fa-fighter-jet'></i>";
        break;
    case "beer places":
        return "<i class='fa fa-beer'></i>";
        break;
    case "artifact":
        return "<i class='fa fa-trophy'></i>";
        break;
   case "events":
        return "<i class='fa fa-users'></i>";
        break;
  case "battle":
        return "<i class='fa fa-bomb'></i>";
        break;
   case "":
        return "<i class='fa fa-circle'></i>";
        break;
    default:
        return "<i class='fa fa-circle'></i>";
        break;
  }
}

function getperiod(start_year){
  switch (true) {
    case start_year < <%=  Event::PERIODS[0][2]%>:
        return "<%= Event::PERIODS[0][0]%>";
        break;
    case start_year > <%= Event::PERIODS[1][1]%> && start_year < <%= Event::PERIODS[1][2]%>:
        return "<%= Event::PERIODS[1][0]%>";
        break;
    case start_year > <%= Event::PERIODS[2][1]%> && start_year < <%= Event::PERIODS[2][2]%>:
        return "<%= Event::PERIODS[2][0]%>";
        break;
    case start_year > <%= Event::PERIODS[3][1]%> && start_year < <%= Event::PERIODS[3][2]%>:
        return "<%= Event::PERIODS[3][0]%>";
        break;
   default:
        return "none";
  }

};


  <% end %>
<% end %>







