

<div id="container" >
    <div id="map" class="map">

    </div>
  <div id="slider-container">
    <div class="era list-inline">
    </div>
    <input id="slider" type="range" min=<%= Event::FIRST_YEAR %> max=<%= Event::LAST_YEAR %> step="10" />
  </div>
</div>




</div>

<% content_for(:after_js) do %>
  <%= javascript_tag do %>

var year = d3.scale.linear()
    .domain([<%= Event::FIRST_YEAR %>, <%= Event::LAST_YEAR %>])
    .range([0, 100]);


var periodPercent = d3.scale.linear()
    .domain([0 , <%= - Event::FIRST_YEAR + Event::LAST_YEAR %>])
    .range([0, 100]);

var arrayOfLatLngs = [];
  <% @events.each do |event| %>
  arrayOfLatLngs.push([<%= event.latitude %>, <%= event.longitude %>]);
  d3.select('#slider-container').insert("i", ":first-child").attr("id","arrow<%= event.id %>").attr("class", "arrow fa fa-caret-down").style('left', year(<%= event.start_year %>)+ '%' ).html('<%= event.start_year %>');

    <% end %>

    d3.select('.era').append('li').attr('class', 'period <%= Event::PERIODS[0][0][0] %>').attr('id', 'an').style('width', periodPercent(3976)+'%').html('<%= Event::PERIODS[0][0] %>');
    d3.select('.era').append('li').attr('class', 'period <%= Event::PERIODS[1][0][0] %>').attr('id', 'ma').style('width', periodPercent(1016)+'%').html('<%= Event::PERIODS[1][0] %>');;
    d3.select('.era').append('li').attr('class', 'period <%= Event::PERIODS[2][0][0] %>').attr('id', 'tm').style('width', periodPercent(297)+'%').html('<%= Event::PERIODS[2][0] %>');;
    d3.select('.era').append('li').attr('class', 'period <%= Event::PERIODS[3][0][0] %>').attr('id', 'ec').style('width', periodPercent(226)+'%').html('<%= Event::PERIODS[3][0] %>');;

var bounds = new L.LatLngBounds(arrayOfLatLngs);



  var tileServer = 'http://{s}.tile.openstreetmap.se/hydda/full/{z}/{x}/{y}.png'

  var tileAttribution = 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>';

  var map = L.map("map",{bounceAtZoomLimits:false, worldCopyJump:true, zoomAnimationThreshold:7}).fitBounds(bounds);

        L.tileLayer(tileServer, {attribution: tileAttribution,   noWrap:true}).addTo(map);

        var markers = {};

  var markerMap = {};
  var popUpMap = {};

  <% @events.each do |event| %>

    var marker = L.marker([<%= event.latitude %>, <%= event.longitude %>]);

      marker.id = <%= event.id %>;
      marker.start_year = <%= event.start_year %>;
      marker.period = getperiod(marker.start_year);
      markerMap[<%= event.id %>] = marker;
      popUpMap[<%= event.id %>] = markerMap[<%= event.id %>].bindPopup('<%= event.title %> <p><%= link_to("See more", event_path(event.id))  %></p>');
      // markers[<%= event.id %>] = marker ;

      marker.addTo(map);
	<% if @highlight == event.id %>
	marker.openPopup();
	<% end %>
    <% end %>

   var range = 300;
   document.getElementById('slider').addEventListener('change', function() {
        var selected = parseInt(this.value);
        console.log("selected ", selected);
      _.each(markerMap, function(marker){


      var range = 200;

	map.removeLayer(marker);
	if (getperiod(selected) == marker.period){
          marker.addTo(map);
          console.log('.' + marker.period[0]);
          d3.select('.' + marker.period[0]).transition().style('opacity', '1');
        }else{
        d3.select('.' + marker.period[0]).transition().style('opacity', '0.8');
        }

      if (selected - range < marker.start_year && selected + range > marker.start_year){
        marker.openPopup();
        d3.select('#arrow' + marker.id).style('font-size','1.2em');
      }else{
        marker.closePopup();
        d3.select('#arrow' + marker.id).style('font-size','1em');
      }

      });

   <% if @highlight %>
      if( markerMap[<%= @highlight %>] !== undefined ) {
        document.getElementById('slider').value = markers[<%= @highlight %>].start_year;
      }
   <% end %>

});

function getperiod(start_year){
  switch (true) {
    case start_year < <%=  Event::PERIODS[0][2]%>:
        return "<%= Event::PERIODS[0][0]%>";
        break;
    case start_year > <%= Event::PERIODS[1][1]%> && start_year < <%= Event::PERIODS[1][2]%>:
        return "<%= Event::PERIODS[1][0]%>";
        break;
    case start_year > <%= Event::PERIODS[2][1]%> && start_year < <%= Event::PERIODS[2][2]%>:
        return "<%= Event::PERIODS[2][0]%>";
        break;
    case start_year > <%= Event::PERIODS[3][1]%> && start_year < <%= Event::PERIODS[3][2]%>:
        return "<%= Event::PERIODS[3][0]%>";
        break;
   default:
        return "none";
  }

};


  <% end %>
<% end %>







